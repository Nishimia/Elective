@model Elective.Models.CourseModels.CourseCreateModel
@using Elective.HtmlHelpers

@{
	ViewBag.Title = "Create";
}

<div class="container mb-1 mt-2">
	<div class="row mt-3 mb-3">
		<div class="col-sm-3 float-left">
			<h2>Create course</h2>
		</div>
	</div>
</div>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			<h5 class="pointer">
				@Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label col-sm-2" })
			</h5>
			<div class="col-sm-10">
				@Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter course name" } })
				@Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<h5 class="pointer">
				@Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-sm-2" })
			</h5>
			<div class="col-sm-10">
				@Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter start date" } })
				@Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<h5 class="pointer">
				@Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-sm-2" })
			</h5>
			<div class="col-sm-10">
				@Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter end date" } })
				@Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<h5 class="pointer">
				@Html.LabelFor(model => model.Subjects, htmlAttributes: new { @class = "control-label col-sm-2" })
			</h5>
			<div class="col-sm-10">
				@Html.DropDownListFor(model => model.Subjects, Model.SubjectSelectList, new { @class = "form-control choices", multiple = "multiple", placeholder = "Select subjects" })
				@Html.ValidationMessageFor(model => model.Subjects, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<h5 class="pointer">
				@Html.LabelFor(model => model.TutorId, htmlAttributes: new { @class = "control-label col-sm-2" })
			</h5>
			<div class="col-sm-10">
				@Html.DropDownListFor(model => model.TutorId, Model.TutorSelectList, new { @class = "form-control choices", placeholder = "Select tutor" })
				@Html.ValidationMessageFor(model => model.TutorId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="row">
			<div class="form-group col-sm-1">
				<div class="col-md-offset-2 col-sm-12">
					<input type="submit" value="Create" class="btn btn-primary" />
				</div>
			</div>
			<div class="col-sm-9">
				@Html.Button("Back to Courses", "Index", "btn-secondary", "float-right")
			</div>
		</div>
	</div>
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css">
<script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>

<script>
	const choices = new Choices('.choices');
</script>